name: K8S Manager

on:
    workflow_call:
        inputs:
            env:
                description: "Environment (dev | prod)"
                required: true
                type: string
                default: "dev"
            action:
                description: "Action (apply | delete)"
                required: true
                type: string
                default: "apply"
        secrets:
            k8s_token:
                description: "K8S (Digital Ocean) Token"
                required: true
            k8s_cluster_id:
                description: "K8S (Digital Ocean) Cluster ID"
                required: true

env:
    NAMESPACE: ornio-${{ inputs.env }}
    DEPLOY_PATH: .k8s/${{ inputs.env }}/
    DO_TOKEN: ${{ secrets.k8s_token }}
    DO_CLUSTER_ID: ${{ secrets.k8s_cluster_id }}

jobs:
    k8s-manage:
        name: K8S Manage
        if: ${{ (inputs.env == 'dev' || inputs.env == 'prod') && (inputs.action == 'apply' || inputs.action == 'delete')}}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout the code
              uses: actions/checkout@v2
            - name: Install doctl
              uses: digitalocean/action-doctl@v2
              with:
                  token: ${{ env.DO_TOKEN }}
            - name: Execute action towards K8S
              run: |
                  doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.DO_CLUSTER_ID }}
                  kubectl ${{ inputs.action }} -f ${{ env.DEPLOY_PATH }} --insecure-skip-tls-verify --namespace=${{ env.NAMESPACE }}
