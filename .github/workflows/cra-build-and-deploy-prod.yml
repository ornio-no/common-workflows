name: CRA Build and Deploy Production

on:
  workflow_call:
    inputs:
      node-version:
        default: "lts/*"
        description: "Node Version"
        required: false
        type: string
      image_name:
        description: "Image name"
        required: true
        type: string
      pre_build:
        description: "Run Pre Build"
        required: false
        type: string
    secrets:
      k8s_token:
        description: "K8S (Digital Ocean) Token"
        required: true
      k8s_cluster_id:
        description: "K8S (Digital Ocean) Cluster ID"
        required: true

env:
  NAMESPACE: ornio-prod
  IMAGE_NAME: ${{ inputs.image_name }}
  DEPLOYMENT_NAME: ${{ inputs.image_name }}
  TAG_NAME: registry.digitalocean.com/ornio-k8s-registry/$IMAGE_NAME
  TAG_NAME_WITH_COMMIT: registry.digitalocean.com/ornio-k8s-registry/$IMAGE_NAME:$GITHUB_SHA
  DO_TOKEN: ${{ secrets.k8s_token }}
  DO_CLUSTER_ID: ${{ secrets.k8s_cluster_id }}

jobs:
  build-app:
    name: Build the app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{inputs.node-version}}
      - run: |
          cp .env.prod .env
          npm install
          ${{inputs.pre_build}} npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: |
            build/*
            Dockerfile
  build-and-deploy-prod:
    name: Build and deploy Docker image
    runs-on: ubuntu-latest
    needs: build-app
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ env.DO_TOKEN }}
      - name: Build and push docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }} -f Dockerfile .
          docker tag ${{ env.IMAGE_NAME }} ${{ env.TAG_NAME }}
          docker tag ${{ env.IMAGE_NAME }} ${{ env.TAG_NAME_WITH_COMMIT }}
          doctl registry login --expiry-seconds 1200
          docker push ${{ env.TAG_NAME_WITH_COMMIT }}
          docker push ${{ env.TAG_NAME }}
      - name: Deploy to K8S
        run: |
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.DO_CLUSTER_ID }}
          kubectl --insecure-skip-tls-verify --namespace=${{ env.NAMESPACE }} set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.DEPLOYMENT_NAME }}=${{ env.TAG_NAME_WITH_COMMIT }}
